project_name: cgapp
report_sizes: true

env_files:
  github_token: ~/.github_token

before:
  hooks:
    - go mod download
    - go mod tidy
    - go run github.com/google/wire/cmd/wire@latest ./...
    - go run github.com/securego/gosec/v2/cmd/gosec@latest -quiet ./...
    - go run github.com/go-critic/go-critic/cmd/gocritic@latest check -enableAll ./...
    - go run github.com/google/osv-scanner/cmd/osv-scanner@latest -r .
    - go test -race ./...

builds:
  -
    id: default
    main: ./cmd/cgapp/main.go
    env: [ CGO_ENABLED=0 ]
    goos: [ linux, windows, darwin ]
    goarch: [ amd64, arm64 ]

upx:
  -
    ids: [ default ]
    enabled: true
    compress: best
    lzma: true
    brute: true
    goos: [ linux, windows ] # skip darwin (macOS 13.x Ventura is not support now)
    goarch: [ amd64, arm64 ]

release:
  ids: [ default ]
  draft: true
  replace_existing_draft: true
  target_commitish: "{{ .Commit }}"
  #  discussion_category_name: General
  prerelease: auto
  mode: replace
  header: |
    ## ⚙️ The `{{ .Tag }}` release
  footer: |
    ## Install or update
    
    For native Go installation (any platforms):
    
    ```console
    go install github.com/create-go-app/cli/v5/cmd/cgapp@latest
    ```

    For [Homebrew][brew_url] users (GNU/Linux, macOS):
    
    ```console
    # Tap a new formula:
    brew tap create-go-app/tap
    
    # Installation:
    brew install create-go-app/tap/cli
    
    # Upgrade to the latest:
    brew upgrade create-go-app/tap/cli
    ```
    
    > 💡 Note: See the [`Wiki page`][wiki_url] to understand the project structure and get general recommendations.
    
    ## Your help to improve project
    
    I'd be truly grateful for help with:
    
    - Creating tests (and/or benchmarks) for code.
    - Improving existing functions, structs, or tests.
    - Feature requests with interesting functions that would be good to add.
    
    Your PRs & issues are welcome! Thanks 😉
    
    [brew_url]: https://brew.sh
    [wiki_url]: https://github.com/create-go-app/cli/wiki
  disable: false
  skip_upload: false

brews:
  -
    repository:
      owner: create-go-app
      name: homebrew-tap
      branch: main
      token: "{{ .Env.GITHUB_TOKEN }}"
      pull_request:
        enabled: true
      git:
        url: "git@github.com:create-go-app/homebrew-tap.git"
        private_key: "{{ .Env.PRIVATE_KEY_PATH }}"
    commit_author:
      name: Vic Shóstak
      email: koddr.me@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    caveats: |
      After install (or update) cgapp, let's create a new project via interactive console UI in current folder:
  
      $ cgapp create
      
      Next, open the generated Ansible inventory file (called hosts.ini) and fill in the variables according to your server configuration. 
      
      And you're ready to automatically deploy this project:
      
      $ cgapp deploy
      
      That's all you need to know to start! 🎉
    homepage: "https://github.com/create-go-app/cli"
    description: |
      Create a new production-ready project with backend (Golang), frontend (JavaScript, TypeScript) and deploy automation (Ansible, Docker) by running one CLI command.
      Focus on writing code and thinking of business-logic! The CLI will take care of the rest.
    license: Apache 2.0
    skip_upload: false
    dependencies:
      - name: git
      - name: npm

dockers:
  -
    id: "{{ .ProjectName }}"
    ids: [ default ]
    image_templates:
      - "koddr/{{ .ProjectName }}:latest"
      - "koddr/{{ .ProjectName }}:{{ .Tag }}"
      - "koddr/{{ .ProjectName }}:v{{ .Major }}"
      - "koddr/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--platform=linux/amd64"
    skip_push: false
    push_flags:
      - --tls-verify=false

nfpms:
  -
    maintainer: Vic Shóstak <koddr.me@gmail.com>
    description: |
      Create a new production-ready project with backend (Golang), frontend (JavaScript, TypeScript) and deploy automation (Ansible, Docker) by running one CLI command.
      Focus on writing code and thinking of business-logic! The CLI will take care of the rest.
    homepage: "https://github.com/create-go-app/cli"
    license: Apache 2.0
    formats: [ deb, rpm, apk, archlinux ]
    dependencies: [ git, npm ]

archives:
  -
    format_overrides:
      - goos: windows
        format: zip
    files: [ LICENSE, README.md ]

checksum:
  name_template: "checksums.txt"

changelog:
#  use: github
  sort: asc
  abbrev: -1
  filters:
    exclude: [ "^*.md", "^*.ya?ml" ]
  groups:
    - title: Features
      regexp: ^.*?((F|f)eature)|((A|a)dd).*?$
      order: 0
    - title: Bug fixes
      regexp: ^.*?((B|b)ug)|((F|f)ix).*?$
      order: 1
    - title: Improvements
      regexp: ^.*?(I|i)mprove.*?$
      order: 2
    - title: Updates
      regexp: ^.*?(U|u)pdate.*?$
      order: 3
    - title: Security issues
      regexp: ^.*?(S|s)ecurity.*?$
      order: 4
    - title: Delete unused or stale
      regexp: ^.*?((D|d)elete)|((U|u)nused)|((S|s)tale).*?$
      order: 5
    - title: Others
      order: 999
